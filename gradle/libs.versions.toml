[versions]
adobe-coreSdk = "3.4.1"
adobe-userProfile = "3.0.1"
adobe-mediaAnalytics = "3.1.2"
adobe-analytics = "3.0.2"
adobe-audience = "3.0.1"
adobe-lifecycle = "3.0.2"
adobe-identity = "3.0.2"
adobe-signal = "3.0.1"

agp = "8.8.0"
airship = "19.9.1"
androidx-core = "1.15.0"
androidx-design = "1.12.0"
browser = "1.8.0"
branch = "5.19.0"

compose-bom = "2025.02.00"
compose-viewmodel = "2.8.7"
compose-constraintlayout = "1.1.0"
compose-navigation = "2.8.7"
compose_hilt_nav = "1.2.0"

comscore = "6.12.1"
criteo = "7.1.0"

fragment = "1.8.6"
chucker = "4.2.0"
coil = "3.2.0"
# Pre-release versions for testing Kotlin previews can be found here
coroutines = "1.10.2"
constraintlayout = "2.2.0"
datastore = "1.1.7"
detekt = "1.23.1"
exoplayer = "2.19.1"
flexbox = "3.0.0"
media3 = "1.6.1"
glide = "4.16.0"
google-services = "4.4.2"
gson = "2.13.1"
hilt = "2.56.2"
kotlin = "2.2.0"
ksp = "2.2.0-2.0.2" # The first part of the version should always match with the kotlin version
kotlinx-serialization = "1.9.0"
leakcanary = "2.14"

mockito = "5.18.0"

navigation = "2.8.7"

onetrust = "202506.1.0.0"

charting = "v3.1.0"
okhttp = "5.1.0"
paging = "3.3.6"
preferences = "1.2.1"
recyclerview = "1.4.0"
retrofit = "3.0.0"
room = "2.6.1"
taboola = "4.0.9"
test-runner = "1.6.2"
test-rules = "1.6.1"
timber = "5.0.1"
twc = "5.8.1202"
viewpager2 = "1.1.0"
webkit = "1.12.1"
workmanager = "2.10.0"
workmanagerHilt = "1.2.0"
firebase-crashlytics-gradle = "3.0.3"
firebase-perfmonitor = "1.4.2"
firebase-bom = "33.9.0"
location = "21.3.0"
ads = "23.6.0"
parsely = "4.1.1"
appcompat = "1.7.0"
activity = "1.10.0"

nbc-identity = "2.9.1-rc.4"

[plugins]
android-application = { id = "com.android.application" }
android-library = { id = "com.android.library" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
google-services = { id = "com.google.gms.google-services", version.ref = "google-services" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebase-crashlytics-gradle" }
firebase-performance = { id = "com.google.firebase.firebase-perf", version.ref = "firebase-perfmonitor" }

[libraries]
adobe-coreSdk = { module = "com.adobe.marketing.mobile:core", version.ref = "adobe-coreSdk" }
adobe-userProfile = { module = "com.adobe.marketing.mobile:userprofile", version.ref = "adobe-userProfile" }
adobe-analytics = { module = "com.adobe.marketing.mobile:analytics", version.ref = "adobe-analytics" }
adobe-audience = { module = "com.adobe.marketing.mobile:audience", version.ref = "adobe-audience" }
adobe-mediaAnalytics = { module = "com.adobe.marketing.mobile:media", version.ref = "adobe-mediaAnalytics" }
adobe-lifecycle = { module = "com.adobe.marketing.mobile:lifecycle", version.ref = "adobe-lifecycle" }
adobe-identity = { module = "com.adobe.marketing.mobile:identity", version.ref = "adobe-identity" }
adobe-signal = { module = "com.adobe.marketing.mobile:signal", version.ref = "adobe-signal" }

airship-core = { module = "com.urbanairship.android:urbanairship-core", version.ref = "airship" }
airship-fcm = { module = "com.urbanairship.android:urbanairship-fcm", version.ref = "airship" }
airship-automation = { module = "com.urbanairship.android:urbanairship-automation", version.ref = "airship" }
airship-messageCenter = { module = "com.urbanairship.android:urbanairship-message-center", version.ref = "airship" }

android-tools = { module = "com.android.tools.build:gradle", version.ref = "agp" }

androidx-corektx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }

androidx-customtabs = { module = "androidx.browser:browser", version.ref = "browser" }

# Amusingly, appcompat depends on fragment 1.0.0, so we have to have this version to force the latest
androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "fragment" }

androidx-navigationFragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
androidx-navigationUI = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }

androidx-preferenceKtx = { module = "androidx.preference:preference-ktx", version.ref = "preferences" }

androidx-paging = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-coroutine = { module = "androidx.room:room-ktx", version.ref = "room" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
androidx-test-uiautomator = "androidx.test.uiautomator:uiautomator:2.3.0"
androidx-test-runner = { module = "androidx.test:runner", version.ref = "test-runner" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "test-rules" }

androidx-viewpager2 = { module = "androidx.viewpager2:viewpager2", version.ref = "viewpager2" }

androidx-webkit = { module = "androidx.webkit:webkit", version.ref = "webkit" }

androidx-work-runtime = { module = "androidx.work:work-runtime-ktx", version.ref = "workmanager" }
androidx-work-hilt = { module = "androidx.hilt:hilt-work", version.ref = "workmanagerHilt" }
androidx-work-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "workmanagerHilt" }

branch = { module = "io.branch.sdk.android:library", version.ref = "branch" }

mpchartlibrary = { module = "com.github.PhilJay:MPAndroidChart", version.ref = "charting" }

coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "compose-constraintlayout" }
compose-livedata = { module = "androidx.compose.runtime:runtime-livedata" }
compose-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "compose-viewmodel" }
compose-material = { module = "androidx.compose.material:material" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-material3-size = { module = "androidx.compose.material3:material3-window-size-class" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling" }
compose-uitoolingpreview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-uiviewbinding = { module = "androidx.compose.ui:ui-viewbinding" }
compose-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "compose-viewmodel" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "compose-navigation" }
compose-hilt-navigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "compose_hilt_nav" }

media3-common = { module = "androidx.media3:media3-common", version.ref = "media3" }
media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
media3-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "media3" }
media3-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "media3" }

firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-crashlyticsNDK = { module = "com.google.firebase:firebase-crashlytics-ndk" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }
firebase-inAppMessagingDisplay = { module = "com.google.firebase:firebase-inappmessaging-display" }
firebase-config = { module = "com.google.firebase:firebase-config" }
firebase-performanceMonitor = { module = "com.google.firebase:firebase-perf" }
firebase-dynamicLink = { module = "com.google.firebase:firebase-dynamic-links" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }

google-material = { module = "com.google.android.material:material", version.ref = "androidx-design" }
google-flexbox = { module = "com.google.android.flexbox:flexbox", version.ref = "flexbox" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }

chucker-core = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
chucker-noop = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker" }

comScore = { module = "com.comscore:android-analytics", version.ref = "comscore" }
criteo = { module = "com.criteo.publisher:criteo-publisher-sdk", version.ref = "criteo" }

dagger-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

kotlin-gradleplugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin"}

leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }
misc-timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito" }

okHttp-core = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okHttp-urlConnection = { module = "com.squareup.okhttp3:okhttp-urlconnection", version.ref = "okhttp" }
okHttp-loggingInt = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

onetrust = { module = "com.onetrust.cmp:native-sdk", version.ref = "onetrust" }

play-location = { module = "com.google.android.gms:play-services-location", version.ref = "location" }
play-ads = { module = "com.google.android.gms:play-services-ads", version.ref = "ads" }

retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
retrofit-keep = { module = "com.squareup.retrofit2:response-type-keeper", version.ref = "retrofit" }

shimmer = { module = "com.facebook.shimmer:shimmer", version = "0.5.0" }
taboola = { module = "com.taboola:android-sdk", version.ref = "taboola" }

nbc-identity-sdk-release = { module = "com.nbc.identity:sdk-ui-android-release", version.ref = "nbc-identity" }
nbc-identity-sdk-debug = { module = "com.nbc.identity:sdk-ui-android-debug", version.ref = "nbc-identity" }

test-junit4 = { module = "junit:junit", version = "4.13.2" }
test-junit = { module = "androidx.test.ext:junit", version = "1.2.1" }
test-espresso = { module = "androidx.test.espresso:espresso-core", version = "3.6.1" }

twc-mapsdk = { module = "com.wsi.mapsdk:mapsdk", version.ref = "twc" }
twc-mapcallout = { module = "com.wsi.mapsdk:mapcallouts", version.ref = "twc" }
parsely = { module = "com.parsely:parsely", version.ref = "parsely" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }

[bundles]
compose-base = ["compose-navigation", "compose-hilt-navigation", "compose-livedata", "compose-material", "compose-material3", "compose-material3-size", "compose-ui", "compose-uitooling", "compose-viewmodel", "compose-lifecycle"]
androidx-room = ["androidx-room-coroutine", "androidx-room-runtime"]
androidx-work = ["androidx-work-runtime", "androidx-work-hilt"]
twcbundle = ["twc-mapsdk", "twc-mapcallout"]
media3bundle = ["media3-common", "media3-exoplayer", "media3-ui", "media3-hls", "media3-okhttp"]
